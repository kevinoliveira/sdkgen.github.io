{"version":3,"sources":["webpack:///../getting-started/first-nodejs-server.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,yNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,uBADR,wBAGA,6KAA4J,mBAAGC,WAAW,KAAQ,CAC9K,KAAQ,oCADgJ,oCAG5J,gDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,2BAEL,iBAAQ,CACN,GAAM,6BADR,6BAGA,kCAAiB,0BAAYA,WAAW,KAAvB,cAAjB,uCACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mMAaL,gGACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2DAIL,iBAAQ,CACN,GAAM,uBADR,uBAGA,mEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qGAOL,sCAAqB,0BAAYA,WAAW,KAAvB,WAArB,UACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,0iBAuBL,iBAAQ,CACN,GAAM,mBADR,mBAGA,0CACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kC,uNAOTJ,EAAWK,gBAAiB","file":"component---getting-started-first-nodejs-server-mdx-d44cae08aa869c1d44a3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/sdkgen/sdkgen.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"install-sdkgens-cli\"\n    }}>{`Install sdkgen's cli`}</h1>\n    <p>{`First of all you need Node.js ready on your machine. Versions 8, 10 or 12 are supported (all stable maintained release channels). Check for it here: `}<a parentName=\"p\" {...{\n        \"href\": \"https://nodejs.org/en/download/\"\n      }}>{`https://nodejs.org/en/download/`}</a></p>\n    <p>{`Install the global CLI:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i -g @sdkgen/cli\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"create-an-api-description\"\n    }}>{`Create an API description`}</h1>\n    <p>{`Create an `}<inlineCode parentName=\"p\">{`api.sdkgen`}</inlineCode>{` to describe your API. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`type Post {\n    id: uuid\n    title: string\n    body: string\n    createdAt: datetime\n    author: {\n        name: string\n    }\n}\n\n@rest GET /posts/{id}\nfn getPost(id: uuid): Post?\n`}</code></pre>\n    <p>{`You can then generate the TypeScript source for this description using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`sdkgen api.sdkgen -o api.ts -t typescript_nodeserver\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"create-base-project\"\n    }}>{`Create base project`}</h1>\n    <p>{`Let's start a new project with TypeScript:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm init -y\nnpm i --save-dev typescript\nnpm i @sdkgen/node-runtime\nnpx tsc --init -t esnext\n`}</code></pre>\n    <p>{`Then create a `}<inlineCode parentName=\"p\">{`main.ts`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`// Import sdkgen's runtime and the generated file\nimport { SdkgenHttpServer } from \"@sdkgen/node-runtime\";\nimport { api } from \"./api\";\n\n// Every endpoint described must receive some implementation\napi.fn.getPost = async (ctx, {id}) => {\n    return {\n        id,\n        title: \"Getting Started\",\n        author: {\n            name: \"John Doe\"\n        },\n        body: \"Lorem ipsum\",\n        createdAt: new Date(),\n    };\n};\n\n// Start a HTTP server for the API\nconst server = new SdkgenHttpServer(api, {});\nserver.listen(8000);\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"run-the-project\"\n    }}>{`Run the project`}</h1>\n    <p>{`Build and run it:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npx tsc\nnode main.js\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}